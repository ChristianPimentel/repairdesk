{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,6KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,mKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG,mKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,mKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,mKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,qKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 411, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/dashboard/technician-card.tsx"],"sourcesContent":["\n'use client';\n\nimport React, { useState } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Button } from '@/components/ui/button';\nimport { Pencil, Trash2, UserPlus, X, Check, ClipboardPaste, KeyRound, Phone, QrCode } from 'lucide-react';\nimport type { Technician } from '@/lib/types';\nimport { useToast } from '@/hooks/use-toast';\nimport { ScrollArea } from '../ui/scroll-area';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Textarea } from '../ui/textarea';\nimport { db } from '@/lib/firebase';\nimport { collection, addDoc, doc, deleteDoc, updateDoc } from 'firebase/firestore';\nimport { useUser } from '@/context/UserContext';\nimport QRCode from 'qrcode';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogDescription,\n  DialogFooter,\n  DialogClose,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport Image from 'next/image';\n\ninterface TechnicianCardProps {\n  technicians: Technician[];\n}\n\nexport function TechnicianCard({ technicians }: TechnicianCardProps) {\n  const { user } = useUser();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [editingTechnician, setEditingTechnician] = useState<Technician | null>(null);\n  const [editedName, setEditedName] = useState('');\n  const [editedEmail, setEditedEmail] = useState('');\n  const [editedPhone, setEditedPhone] = useState('');\n  const [bulkText, setBulkText] = useState('');\n  \n  const [isQrDialogOpen, setIsQrDialogOpen] = useState(false);\n  const [qrCodeUrl, setQrCodeUrl] = useState('');\n  const [currentTechnicianInfo, setCurrentTechnicianInfo] = useState<{name: string, pass: string} | null>(null);\n\n  const [isAddTechnicianDialogOpen, setIsAddTechnicianDialogOpen] = useState(false);\n\n\n  const { toast } = useToast();\n\n  const generatePassword = () => {\n    const length = 8;\n    const charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()\";\n    let retVal = \"\";\n    for (let i = 0, n = charset.length; i < length; ++i) {\n        retVal += charset.charAt(Math.floor(Math.random() * n));\n    }\n    return retVal;\n  }\n  \n  const showQrCodeDialog = async (technicianName: string, technicianEmail: string, tempPass: string) => {\n    const loginUrl = `${window.location.origin}/?email=${encodeURIComponent(technicianEmail)}&password=${encodeURIComponent(tempPass)}`;\n    const qrUrl = await QRCode.toDataURL(loginUrl);\n    setQrCodeUrl(qrUrl);\n    setCurrentTechnicianInfo({ name: technicianName, pass: tempPass });\n    setIsQrDialogOpen(true);\n  }\n\n  const handleAddTechnician = async () => {\n    if (!name || !email) {\n      toast({\n        title: 'Missing Information',\n        description: 'Please provide both name and email.',\n        variant: 'destructive',\n      });\n      return;\n    }\n    if (technicians.some(t => t.email.toLowerCase() === email.toLowerCase())) {\n        toast({\n            title: 'Email exists',\n            description: 'A technician with this email already exists.',\n            variant: 'destructive',\n        });\n        return;\n    }\n\n    const tempPassword = generatePassword();\n    const newTechnician = {\n      name,\n      email: email.toLowerCase(),\n      phone,\n      password: tempPassword,\n      forcePasswordChange: true,\n    };\n\n    try {\n        await addDoc(collection(db, 'technicians'), newTechnician);\n        setIsAddTechnicianDialogOpen(false); // Close add dialog\n        showQrCodeDialog(name, email, tempPassword);\n        setName('');\n        setEmail('');\n        setPhone('');\n    } catch (error) {\n        console.error(\"Error adding technician: \", error);\n        toast({ title: 'Error', description: 'Could not add technician.', variant: 'destructive'});\n    }\n  };\n\n  const handleDeleteTechnician = async (id: string) => {\n    try {\n        await deleteDoc(doc(db, 'technicians', id));\n        toast({\n            title: 'Technician Removed',\n            description: `The technician has been removed.`,\n            variant: 'destructive'\n        });\n    } catch (error) {\n        console.error(\"Error deleting technician: \", error);\n        toast({ title: 'Error', description: 'Could not remove technician.', variant: 'destructive'});\n    }\n  };\n\n  const handleEditTechnician = (technician: Technician) => {\n    setEditingTechnician(technician);\n    setEditedName(technician.name);\n    setEditedEmail(technician.email);\n    setEditedPhone(technician.phone || '');\n  };\n  \n  const handleCancelEdit = () => {\n    setEditingTechnician(null);\n    setEditedName('');\n    setEditedEmail('');\n    setEditedPhone('');\n  };\n\n  const handleUpdateTechnician = async () => {\n    if(!editingTechnician) return;\n    \n    if (!editedName || !editedEmail) {\n        toast({\n          title: 'Missing Information',\n          description: 'Please provide both name and email.',\n          variant: 'destructive',\n        });\n        return;\n    }\n    if(editedEmail.toLowerCase() !== editingTechnician.email.toLowerCase() && technicians.some(t => t.email.toLowerCase() === editedEmail.toLowerCase())) {\n        toast({\n            title: 'Email exists',\n            description: 'A technician with this email already exists.',\n            variant: 'destructive',\n        });\n        return;\n    }\n\n    try {\n        const techRef = doc(db, 'technicians', editingTechnician.id);\n        await updateDoc(techRef, { name: editedName, email: editedEmail.toLowerCase(), phone: editedPhone });\n        toast({\n            title: 'Technician Updated',\n            description: `The technician's details have been updated.`,\n        });\n        handleCancelEdit();\n    } catch (error) {\n        console.error(\"Error updating technician: \", error);\n        toast({ title: 'Error', description: 'Could not update technician.', variant: 'destructive'});\n    }\n  };\n\n  const handleResetPassword = async (technician: Technician) => {\n    const newPassword = generatePassword();\n    try {\n        const techRef = doc(db, 'technicians', technician.id);\n        await updateDoc(techRef, { password: newPassword, forcePasswordChange: true });\n        showQrCodeDialog(technician.name, technician.email, newPassword);\n    } catch (error) {\n        console.error(\"Error resetting password: \", error);\n        toast({ title: 'Error', description: 'Could not reset password.', variant: 'destructive'});\n    }\n  }\n  \n  const handleBulkAddFromText = async () => {\n    if (!bulkText.trim()) {\n        toast({\n            title: 'No Input',\n            description: 'Please paste technician data into the text area.',\n            variant: 'destructive',\n        });\n        return;\n    }\n    \n    const addedTechnicians: {name: string, email: string, pass: string}[] = [];\n    const duplicates: string[] = [];\n    const existingEmails = new Set(technicians.map(t => t.email.toLowerCase()));\n    \n    const lines = bulkText.trim().split('\\n');\n\n    for (const line of lines) {\n        const parts = line.split(',').map(p => p.trim());\n        if (parts.length >= 2) {\n            const name = parts[0];\n            const email = parts[1];\n            const phone = parts[2] || '';\n            \n            if (name && email) {\n                if (!existingEmails.has(email.toLowerCase())) {\n                    const tempPassword = generatePassword();\n                    const newTechnician = {\n                        name,\n                        email: email.toLowerCase(),\n                        phone,\n                        password: tempPassword,\n                        forcePasswordChange: true,\n                    };\n                    try {\n                        await addDoc(collection(db, 'technicians'), newTechnician);\n                        addedTechnicians.push({ name, email, pass: tempPassword });\n                        existingEmails.add(email.toLowerCase());\n                    } catch (e) {\n                        // ignore failed adds\n                    }\n                } else {\n                    duplicates.push(email);\n                }\n            }\n        }\n    }\n\n    if (addedTechnicians.length > 0) {\n        setIsAddTechnicianDialogOpen(false);\n        const firstTech = addedTechnicians[0];\n        showQrCodeDialog(firstTech.name, firstTech.email, firstTech.pass);\n\n        if (addedTechnicians.length > 1) {\n            toast({\n                title: 'Multiple Technicians Added',\n                description: `${addedTechnicians.length} technicians were added. Showing QR for the first one.`,\n            });\n        }\n    }\n\n    if (duplicates.length > 0) {\n        toast({\n            title: 'Some Duplicates Skipped',\n            description: `${duplicates.length} technicians were not added because their email already exists.`,\n            variant: 'destructive',\n        });\n    }\n    \n    setBulkText('');\n  };\n\n\n  return (\n    <div className=\"space-y-6\">\n        <div className=\"flex justify-end\">\n            <Dialog open={isAddTechnicianDialogOpen} onOpenChange={setIsAddTechnicianDialogOpen}>\n                <DialogTrigger asChild>\n                    <Button>\n                        <UserPlus className=\"mr-2 h-4 w-4\" />\n                        Add Technician\n                    </Button>\n                </DialogTrigger>\n                <DialogContent>\n                    <DialogHeader>\n                        <DialogTitle>Add New Technician</DialogTitle>\n                        <DialogDescription>\n                            Use the tabs to add a single technician or multiple at once.\n                        </DialogDescription>\n                    </DialogHeader>\n                    <Tabs defaultValue=\"single\" className=\"pt-4\">\n                        <TabsList className=\"grid w-full grid-cols-2\">\n                            <TabsTrigger value=\"single\"><UserPlus className=\"mr-2 h-4 w-4\" /> Add Single</TabsTrigger>\n                            <TabsTrigger value=\"bulk\"><ClipboardPaste className=\"mr-2 h-4 w-4\" /> Bulk Add</TabsTrigger>\n                        </TabsList>\n                        <TabsContent value=\"single\">\n                            <div className=\"space-y-4 py-4\">\n                                <div className=\"space-y-2\">\n                                <Label htmlFor=\"techName\">Full Name</Label>\n                                <Input id=\"techName\" value={name} onChange={(e) => setName(e.target.value)} placeholder=\"e.g., Jane Doe\" />\n                                </div>\n                                <div className=\"space-y-2\">\n                                <Label htmlFor=\"techEmail\">Email</Label>\n                                <Input id=\"techEmail\" type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"e.g., jane.d@example.com\"/>\n                                </div>\n                                <div className=\"space-y-2\">\n                                    <Label htmlFor=\"techPhone\">Phone (Optional)</Label>\n                                    <Input id=\"techPhone\" type=\"tel\" value={phone} onChange={(e) => setPhone(e.target.value)} placeholder=\"e.g., 123-456-7890\" />\n                                </div>\n                            </div>\n                            <DialogFooter>\n                                <DialogClose asChild>\n                                    <Button type=\"button\" variant=\"secondary\">Cancel</Button>\n                                </DialogClose>\n                                <Button onClick={handleAddTechnician}>\n                                    Add Technician\n                                </Button>\n                            </DialogFooter>\n                        </TabsContent>\n                        <TabsContent value=\"bulk\">\n                            <div className=\"space-y-4 py-4\">\n                                <Label htmlFor=\"bulk-add\">Paste a list of \"Name, Email, Phone\" values, one per line.</Label>\n                                <Textarea \n                                    id=\"bulk-add\" \n                                    value={bulkText}\n                                    onChange={(e) => setBulkText(e.target.value)}\n                                    placeholder=\"John Doe,john@example.com,123-456-7890\\nJane Smith,jane@example.com\"\n                                    rows={5}\n                                />\n                                <p className=\"text-xs text-muted-foreground\">\n                                    Each line should contain the name, email, and optionally a phone number, separated by commas.\n                                </p>\n                            </div>\n                            <DialogFooter>\n                                <DialogClose asChild>\n                                    <Button type=\"button\" variant=\"secondary\">Cancel</Button>\n                                </DialogClose>\n                                <Button onClick={handleBulkAddFromText}>Add Technicians</Button>\n                            </DialogFooter>\n                        </TabsContent>\n                    </Tabs>\n                </DialogContent>\n            </Dialog>\n        </div>\n\n        <div className=\"space-y-2\">\n          <h3 className=\"font-medium text-lg\">Technician List</h3>\n            <ScrollArea className=\"h-96 rounded-md border\">\n                <div className=\"p-4 space-y-2\">\n                {technicians.length === 0 ? (\n                    <p className=\"text-sm text-muted-foreground text-center py-4\">No technicians found.</p>\n                ) : (\n                    technicians.map((tech) => (\n                        editingTechnician?.id === tech.id ? (\n                            <div key={tech.id} className=\"flex flex-col gap-2 rounded-md border p-3 bg-secondary/50\">\n                                <Input value={editedName} onChange={e => setEditedName(e.target.value)} placeholder=\"Full Name\" />\n                                <Input type=\"email\" value={editedEmail} onChange={e => setEditedEmail(e.target.value)} placeholder=\"Email\"/>\n                                <Input type=\"tel\" value={editedPhone} onChange={e => setEditedPhone(e.target.value)} placeholder=\"Phone (Optional)\"/>\n\n                                <div className=\"flex justify-end gap-2 mt-1\">\n                                    <Button variant=\"ghost\" size=\"icon\" onClick={handleCancelEdit}><X className=\"h-4 w-4\" /></Button>\n                                    <Button variant=\"ghost\" size=\"icon\" onClick={handleUpdateTechnician}><Check className=\"h-4 w-4\" /></Button>\n                                </div>\n                            </div>\n                        ) : (\n                            <div key={tech.id} className=\"flex items-center justify-between rounded-md border p-3\">\n                                <div>\n                                    <p className=\"font-medium\">{tech.name}</p>\n                                    <p className=\"text-sm text-muted-foreground\">{tech.email}</p>\n                                    {tech.phone && user?.role === 'Admin' ? (\n                                        <a href={`tel:${tech.phone}`} className='flex items-center gap-2 text-sm text-primary hover:underline'>\n                                            <Phone className=\"h-3 w-3\"/> {tech.phone}\n                                        </a>\n                                    ) : tech.phone ? (\n                                        <p className=\"text-sm text-muted-foreground flex items-center gap-2\">\n                                            <Phone className=\"h-3 w-3\"/> {tech.phone}\n                                        </p>\n                                    ) : null}\n                                </div>\n                                <div className=\"flex gap-1\">\n                                    <Button variant=\"ghost\" size=\"icon\" onClick={() => showQrCodeDialog(tech.name, tech.email, tech.password || '')}>\n                                        <QrCode className=\"h-4 w-4\" />\n                                    </Button>\n                                    <Button variant=\"ghost\" size=\"icon\" onClick={() => handleResetPassword(tech)}>\n                                        <KeyRound className=\"h-4 w-4\" />\n                                    </Button>\n                                    <Button variant=\"ghost\" size=\"icon\" onClick={() => handleEditTechnician(tech)}>\n                                        <Pencil className=\"h-4 w-4\" />\n                                    </Button>\n                                    <Button variant=\"ghost\" size=\"icon\" className=\"text-destructive hover:text-destructive\" onClick={() => handleDeleteTechnician(tech.id)}>\n                                        <Trash2 className=\"h-4 w-4\" />\n                                    </Button>\n                                </div>\n                            </div>\n                        )\n                    ))\n                )}\n                </div>\n            </ScrollArea>\n        </div>\n\n        <Dialog open={isQrDialogOpen} onOpenChange={setIsQrDialogOpen}>\n            <DialogContent>\n            <DialogHeader>\n                <DialogTitle>Technician Onboarding</DialogTitle>\n                <DialogDescription>\n                    Have the technician scan this QR code to log in and change their password.\n                </DialogDescription>\n            </DialogHeader>\n            <div className=\"flex flex-col items-center justify-center p-4 gap-4\">\n                {qrCodeUrl && <Image src={qrCodeUrl} alt=\"Technician Login QR Code\" width={250} height={250} />}\n                {currentTechnicianInfo && (\n                    <div className=\"text-center\">\n                        <p className=\"font-medium\">{currentTechnicianInfo.name}</p>\n                        <p className=\"text-sm text-muted-foreground\">Temporary Password:</p>\n                        <p className=\"text-lg font-mono bg-muted p-2 rounded-md\">{currentTechnicianInfo.pass}</p>\n                    </div>\n                )}\n            </div>\n            <DialogFooter>\n                <DialogClose asChild>\n                    <Button type=\"button\" size=\"sm\">Close</Button>\n                </DialogClose>\n            </DialogFooter>\n            </DialogContent>\n        </Dialog>\n\n      </div>\n  );\n}\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1417, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1520, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/dashboard/technicians/page.tsx"],"sourcesContent":["\n'use client';\n\nimport React from 'react';\nimport { TechnicianCard } from '@/components/dashboard/technician-card';\nimport { useUser } from '@/context/UserContext';\nimport {\n    Card,\n    CardContent,\n    CardDescription,\n    CardHeader,\n    CardTitle,\n  } from '@/components/ui/card';\n\nexport default function TechniciansPage() {\n    const { user, technicians } = useUser();\n\n    if (user?.role !== 'Admin') {\n        return (\n            <div className=\"p-4 sm:p-6 lg:p-8\">\n                <Card>\n                    <CardHeader>\n                        <CardTitle>Access Denied</CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                        <p>You do not have permission to view this page.</p>\n                    </CardContent>\n                </Card>\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"p-4 sm:p-6 lg:p-8\">\n             <Card>\n                <CardHeader>\n                    <CardTitle>Manage Technicians</CardTitle>\n                    <CardDescription>\n                        Add, edit, or remove technicians from your team.\n                    </CardDescription>\n                </CardHeader>\n                <CardContent>\n                    <TechnicianCard technicians={technicians} />\n                </CardContent>\n            </Card>\n        </div>\n    )\n}\n"],"names":[],"mappings":";;;;AAIA;AACA;AACA;;;AALA;;;;AAae,SAAS;;IACpB,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAEpC,IAAI,MAAM,SAAS,SAAS;QACxB,qBACI,6LAAC;YAAI,WAAU;sBACX,cAAA,6LAAC,mIAAA,CAAA,OAAI;;kCACD,6LAAC,mIAAA,CAAA,aAAU;kCACP,cAAA,6LAAC,mIAAA,CAAA,YAAS;sCAAC;;;;;;;;;;;kCAEf,6LAAC,mIAAA,CAAA,cAAW;kCACR,cAAA,6LAAC;sCAAE;;;;;;;;;;;;;;;;;;;;;;IAKvB;IAEA,qBACI,6LAAC;QAAI,WAAU;kBACV,cAAA,6LAAC,mIAAA,CAAA,OAAI;;8BACF,6LAAC,mIAAA,CAAA,aAAU;;sCACP,6LAAC,mIAAA,CAAA,YAAS;sCAAC;;;;;;sCACX,6LAAC,mIAAA,CAAA,kBAAe;sCAAC;;;;;;;;;;;;8BAIrB,6LAAC,mIAAA,CAAA,cAAW;8BACR,cAAA,6LAAC,wJAAA,CAAA,iBAAc;wBAAC,aAAa;;;;;;;;;;;;;;;;;;;;;;AAKjD;GAjCwB;;QACU,iIAAA,CAAA,UAAO;;;KADjB","debugId":null}}]
}