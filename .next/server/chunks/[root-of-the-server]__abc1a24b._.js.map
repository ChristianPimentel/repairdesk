{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["\n// src/lib/firebase.ts\nimport { initializeApp, getApp, getApps } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\n\nconst firebaseConfig = {\n  projectId: \"repairdesk-lite-49152\",\n  appId: \"1:340840688158:web:8aea5c544e3229c2f95c0f\",\n  storageBucket: \"repairdesk-lite-49152.firebasestorage.app\",\n  apiKey: \"AIzaSyDEFK_FP3AG_RXpSbRAMDPFB0iAIrqR9Ws\",\n  authDomain: \"repairdesk-lite-49152.firebaseapp.com\",\n  measurementId: \"\",\n  messagingSenderId: \"340840688158\"\n};\n\nconst app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\nexport { app, auth, db };\n"],"names":[],"mappings":"AACA,sBAAsB;;;;;;AACtB;AAAA;AACA;AAAA;AACA;AAAA;;;;AAEA,MAAM,iBAAiB;IACrB,WAAW;IACX,OAAO;IACP,eAAe;IACf,QAAQ;IACR,YAAY;IACZ,eAAe;IACf,mBAAmB;AACrB;AAEA,MAAM,MAAM,CAAC,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,sLAAA,CAAA,gBAAa,AAAD,EAAE,kBAAkB,CAAA,GAAA,sLAAA,CAAA,SAAM,AAAD;AACrE,MAAM,OAAO,CAAA,GAAA,2OAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,KAAK,CAAA,GAAA,mKAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/api/login/route.ts"],"sourcesContent":["\nimport { NextRequest, NextResponse } from 'next/server';\nimport { collection, query, where, getDocs } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { Admin } from '@/lib/types';\n\nexport async function POST(req: NextRequest) {\n    try {\n        const { email, password } = await req.json();\n\n        const q = query(collection(db, \"admins\"), where(\"email\", \"==\", email.toLowerCase()));\n        const querySnapshot = await getDocs(q);\n\n        if (querySnapshot.empty) {\n            return NextResponse.json({ message: 'Invalid credentials.' }, { status: 401 });\n        }\n\n        const adminDoc = querySnapshot.docs[0];\n        const admin = adminDoc.data() as Admin;\n\n        if (admin.password === password) {\n            return NextResponse.json({ success: true, forcePasswordChange: admin.forcePasswordChange || false }, { status: 200 });\n        } else {\n            return NextResponse.json({ message: 'Invalid credentials.' }, { status: 401 });\n        }\n\n    } catch (error) {\n        console.error(\"API Login Error: \", error);\n        return NextResponse.json({ message: 'An unexpected error occurred.' }, { status: 500 });\n    }\n}\n"],"names":[],"mappings":";;;AACA;AACA;AAAA;AACA;;;;AAGO,eAAe,KAAK,GAAgB;IACvC,IAAI;QACA,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,MAAM,IAAI,IAAI;QAE1C,MAAM,IAAI,CAAA,GAAA,mKAAA,CAAA,QAAK,AAAD,EAAE,CAAA,GAAA,mKAAA,CAAA,aAAU,AAAD,EAAE,wHAAA,CAAA,KAAE,EAAE,WAAW,CAAA,GAAA,mKAAA,CAAA,QAAK,AAAD,EAAE,SAAS,MAAM,MAAM,WAAW;QAChF,MAAM,gBAAgB,MAAM,CAAA,GAAA,mKAAA,CAAA,UAAO,AAAD,EAAE;QAEpC,IAAI,cAAc,KAAK,EAAE;YACrB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAuB,GAAG;gBAAE,QAAQ;YAAI;QAChF;QAEA,MAAM,WAAW,cAAc,IAAI,CAAC,EAAE;QACtC,MAAM,QAAQ,SAAS,IAAI;QAE3B,IAAI,MAAM,QAAQ,KAAK,UAAU;YAC7B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAAM,qBAAqB,MAAM,mBAAmB,IAAI;YAAM,GAAG;gBAAE,QAAQ;YAAI;QACvH,OAAO;YACH,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAuB,GAAG;gBAAE,QAAQ;YAAI;QAChF;IAEJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,qBAAqB;QACnC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAgC,GAAG;YAAE,QAAQ;QAAI;IACzF;AACJ","debugId":null}}]
}